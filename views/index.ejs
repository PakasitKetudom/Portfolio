<!DOCTYPE html>
<html>

<head>
    <title>
        <%= title %>
    </title>
    <link rel='stylesheet' href='/stylesheets/style.css' />

</head>

<body>
    <%- include navbar %>
    <section class="index"></section>
    <div class="content">
        <!-- <div style="z-index: -100;">TESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTEST</div> -->
        <!-- <h1 class="wordmain textG" title="Welcome to Portfolio Pakasit Ketudom">Welcome to Portfolio<br/>Pakasit Ketudom</h1> -->
        <!-- <h1 class="wordmain textG" title="Pakasit Ketudom">Pakasit Ketudom</h1> -->
        <div class="text wordmain"></div>
    </div>
</body>

<script>

    class TextScramble {
        constructor(el) {
            this.el = el
            this.chars = '!<>-_\\/[]{}â€”=+*^?#________'
            this.update = this.update.bind(this)
        }
        setText(newText) {
            const oldText = this.el.innerText
            const length = Math.max(oldText.length, newText.length)
            const promise = new Promise((resolve) => this.resolve = resolve)
            this.queue = []
            for (let i = 0; i < length; i++) {
                const from = oldText[i] || ''
                const to = newText[i] || ''
                const start = Math.floor(Math.random() * 40)
                const end = start + Math.floor(Math.random() * 40)
                this.queue.push({ from, to, start, end })
            }
            cancelAnimationFrame(this.frameRequest)
            this.frame = 0
            this.update()
            return promise
        }
        update() {
            let output = ''
            let complete = 0
            for (let i = 0, n = this.queue.length; i < n; i++) {
                let { from, to, start, end, char } = this.queue[i]
                if (this.frame >= end) {
                    complete++
                    output += to
                } else if (this.frame >= start) {
                    if (!char || Math.random() < 0.28) {
                        char = this.randomChar()
                        this.queue[i].char = char
                    }
                    output += `<span class="dud">${char}</span>`
                } else {
                    output += from
                }
            }
            this.el.innerHTML = output
            if (complete === this.queue.length) {
                this.resolve()
            } else {
                this.frameRequest = requestAnimationFrame(this.update)
                this.frame++
            }
        }
        randomChar() {
            return this.chars[Math.floor(Math.random() * this.chars.length)]
        }
    }



    const phrases = [
        'Welcome to',
        '&5%dsi4',
        'My Portfolio',
        '@#%&us)y',
        'My Name is',
        'Rg%7sk',
        'Pakasit Ketudom',
        '*Udkpw8',
        // 'Please Enjoy',
        // 'qeq$%^3'
    ]

    const el = document.querySelector('.text')
    const fx = new TextScramble(el)

    let counter = 0
    const next = () => {
        fx.setText(phrases[counter]).then(() => {
            setTimeout(next, 800)
        })
        counter = (counter + 1) % phrases.length
    }

    next()
</script>

</html>